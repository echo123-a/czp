version: '3.8'

services:
  web:
    build: .
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=internship_system.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    ports:
      - "80:8000"

  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    restart: unless-stopped
    volumes:
      - redis_data:/data

  celery-worker:
    build: .
    command: celery -A internship_system worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=internship_system.settings.production
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media

  celery-beat:
    build: .
    command: celery -A internship_system beat --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=internship_system.settings.production
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: